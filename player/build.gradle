//==================================================================================================
// PROJECT
//==================================================================================================
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        // BINTRAY
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        // COVERALLS
        classpath 'net.saliman:gradle-cobertura-plugin:2.3.1'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
    }
}

//==================================================================================================
// ANDROID
//==================================================================================================
apply plugin: 'com.android.library'
android {
    compileSdkVersion 31
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode System.getenv("CIRCLE_BUILD_NUM") ? System.getenv("CIRCLE_BUILD_NUM").toInteger() : 1
        versionName project.version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}
dependencies {
    implementation "androidx.constraintlayout:constraintlayout:2.1.3"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.exoplayer:exoplayer:2.13.3'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.13.3'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.rootProject.files(android.getBootClasspath().join(File.pathSeparator))
    options.memberLevel = JavadocMemberLevel.PUBLIC
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}




